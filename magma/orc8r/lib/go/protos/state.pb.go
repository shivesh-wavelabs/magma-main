// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/protos/state.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StateID struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	DeviceID             string   `protobuf:"bytes,2,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateID) Reset()         { *m = StateID{} }
func (m *StateID) String() string { return proto.CompactTextString(m) }
func (*StateID) ProtoMessage()    {}
func (*StateID) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{0}
}

func (m *StateID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateID.Unmarshal(m, b)
}
func (m *StateID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateID.Marshal(b, m, deterministic)
}
func (m *StateID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateID.Merge(m, src)
}
func (m *StateID) XXX_Size() int {
	return xxx_messageInfo_StateID.Size(m)
}
func (m *StateID) XXX_DiscardUnknown() {
	xxx_messageInfo_StateID.DiscardUnknown(m)
}

var xxx_messageInfo_StateID proto.InternalMessageInfo

func (m *StateID) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StateID) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

// GetStatesRequest functions in two modes
//  - ids is non-empty  -- normal Get
//  - ids empty         -- Search with filters and load criteria
type GetStatesRequest struct {
	// networkID of the network containing desired state.
	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	// ids for which to return corresponding state.
	Ids []*StateID `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	// typeFilter is an OR of all types specified.
	// The service will return all states matching any of the specified types.
	TypeFilter []string `protobuf:"bytes,10,rep,name=typeFilter,proto3" json:"typeFilter,omitempty"`
	// idFilter is an OR of all device IDs specified.
	// The service will return all states matching any of the specified IDs.
	IdFilter []string `protobuf:"bytes,11,rep,name=idFilter,proto3" json:"idFilter,omitempty"`
	// loadValues specifies whether state values should be loaded in
	// addition to metadata.
	LoadValues bool `protobuf:"varint,12,opt,name=loadValues,proto3" json:"loadValues,omitempty"`
	// If non-empty, the value of id_prefix will be used to do a prefix-match
	// on the keys of queried states. This argument supersedes any value for
	// idFilter.
	IdPrefix             string   `protobuf:"bytes,13,opt,name=id_prefix,json=idPrefix,proto3" json:"id_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatesRequest) Reset()         { *m = GetStatesRequest{} }
func (m *GetStatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatesRequest) ProtoMessage()    {}
func (*GetStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{1}
}

func (m *GetStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatesRequest.Unmarshal(m, b)
}
func (m *GetStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatesRequest.Marshal(b, m, deterministic)
}
func (m *GetStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatesRequest.Merge(m, src)
}
func (m *GetStatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatesRequest.Size(m)
}
func (m *GetStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatesRequest proto.InternalMessageInfo

func (m *GetStatesRequest) GetNetworkID() string {
	if m != nil {
		return m.NetworkID
	}
	return ""
}

func (m *GetStatesRequest) GetIds() []*StateID {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetStatesRequest) GetTypeFilter() []string {
	if m != nil {
		return m.TypeFilter
	}
	return nil
}

func (m *GetStatesRequest) GetIdFilter() []string {
	if m != nil {
		return m.IdFilter
	}
	return nil
}

func (m *GetStatesRequest) GetLoadValues() bool {
	if m != nil {
		return m.LoadValues
	}
	return false
}

func (m *GetStatesRequest) GetIdPrefix() string {
	if m != nil {
		return m.IdPrefix
	}
	return ""
}

type GetStatesResponse struct {
	States               []*State `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatesResponse) Reset()         { *m = GetStatesResponse{} }
func (m *GetStatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatesResponse) ProtoMessage()    {}
func (*GetStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{2}
}

func (m *GetStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatesResponse.Unmarshal(m, b)
}
func (m *GetStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatesResponse.Marshal(b, m, deterministic)
}
func (m *GetStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatesResponse.Merge(m, src)
}
func (m *GetStatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatesResponse.Size(m)
}
func (m *GetStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatesResponse proto.InternalMessageInfo

func (m *GetStatesResponse) GetStates() []*State {
	if m != nil {
		return m.States
	}
	return nil
}

type ReportStatesRequest struct {
	States               []*State `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportStatesRequest) Reset()         { *m = ReportStatesRequest{} }
func (m *ReportStatesRequest) String() string { return proto.CompactTextString(m) }
func (*ReportStatesRequest) ProtoMessage()    {}
func (*ReportStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{3}
}

func (m *ReportStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportStatesRequest.Unmarshal(m, b)
}
func (m *ReportStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportStatesRequest.Marshal(b, m, deterministic)
}
func (m *ReportStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportStatesRequest.Merge(m, src)
}
func (m *ReportStatesRequest) XXX_Size() int {
	return xxx_messageInfo_ReportStatesRequest.Size(m)
}
func (m *ReportStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportStatesRequest proto.InternalMessageInfo

func (m *ReportStatesRequest) GetStates() []*State {
	if m != nil {
		return m.States
	}
	return nil
}

type ReportStatesResponse struct {
	UnreportedStates     []*IDAndError `protobuf:"bytes,1,rep,name=unreportedStates,proto3" json:"unreportedStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReportStatesResponse) Reset()         { *m = ReportStatesResponse{} }
func (m *ReportStatesResponse) String() string { return proto.CompactTextString(m) }
func (*ReportStatesResponse) ProtoMessage()    {}
func (*ReportStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{4}
}

func (m *ReportStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportStatesResponse.Unmarshal(m, b)
}
func (m *ReportStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportStatesResponse.Marshal(b, m, deterministic)
}
func (m *ReportStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportStatesResponse.Merge(m, src)
}
func (m *ReportStatesResponse) XXX_Size() int {
	return xxx_messageInfo_ReportStatesResponse.Size(m)
}
func (m *ReportStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportStatesResponse proto.InternalMessageInfo

func (m *ReportStatesResponse) GetUnreportedStates() []*IDAndError {
	if m != nil {
		return m.UnreportedStates
	}
	return nil
}

type IDAndError struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	DeviceID             string   `protobuf:"bytes,2,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDAndError) Reset()         { *m = IDAndError{} }
func (m *IDAndError) String() string { return proto.CompactTextString(m) }
func (*IDAndError) ProtoMessage()    {}
func (*IDAndError) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{5}
}

func (m *IDAndError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDAndError.Unmarshal(m, b)
}
func (m *IDAndError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDAndError.Marshal(b, m, deterministic)
}
func (m *IDAndError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDAndError.Merge(m, src)
}
func (m *IDAndError) XXX_Size() int {
	return xxx_messageInfo_IDAndError.Size(m)
}
func (m *IDAndError) XXX_DiscardUnknown() {
	xxx_messageInfo_IDAndError.DiscardUnknown(m)
}

var xxx_messageInfo_IDAndError proto.InternalMessageInfo

func (m *IDAndError) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IDAndError) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *IDAndError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type DeleteStatesRequest struct {
	NetworkID            string     `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Ids                  []*StateID `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteStatesRequest) Reset()         { *m = DeleteStatesRequest{} }
func (m *DeleteStatesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteStatesRequest) ProtoMessage()    {}
func (*DeleteStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{6}
}

func (m *DeleteStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteStatesRequest.Unmarshal(m, b)
}
func (m *DeleteStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteStatesRequest.Marshal(b, m, deterministic)
}
func (m *DeleteStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStatesRequest.Merge(m, src)
}
func (m *DeleteStatesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteStatesRequest.Size(m)
}
func (m *DeleteStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStatesRequest proto.InternalMessageInfo

func (m *DeleteStatesRequest) GetNetworkID() string {
	if m != nil {
		return m.NetworkID
	}
	return ""
}

func (m *DeleteStatesRequest) GetIds() []*StateID {
	if m != nil {
		return m.Ids
	}
	return nil
}

type SyncStatesRequest struct {
	States               []*IDAndVersion `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SyncStatesRequest) Reset()         { *m = SyncStatesRequest{} }
func (m *SyncStatesRequest) String() string { return proto.CompactTextString(m) }
func (*SyncStatesRequest) ProtoMessage()    {}
func (*SyncStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{7}
}

func (m *SyncStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncStatesRequest.Unmarshal(m, b)
}
func (m *SyncStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncStatesRequest.Marshal(b, m, deterministic)
}
func (m *SyncStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncStatesRequest.Merge(m, src)
}
func (m *SyncStatesRequest) XXX_Size() int {
	return xxx_messageInfo_SyncStatesRequest.Size(m)
}
func (m *SyncStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncStatesRequest proto.InternalMessageInfo

func (m *SyncStatesRequest) GetStates() []*IDAndVersion {
	if m != nil {
		return m.States
	}
	return nil
}

type IDAndVersion struct {
	Id                   *StateID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version              uint64   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDAndVersion) Reset()         { *m = IDAndVersion{} }
func (m *IDAndVersion) String() string { return proto.CompactTextString(m) }
func (*IDAndVersion) ProtoMessage()    {}
func (*IDAndVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{8}
}

func (m *IDAndVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDAndVersion.Unmarshal(m, b)
}
func (m *IDAndVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDAndVersion.Marshal(b, m, deterministic)
}
func (m *IDAndVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDAndVersion.Merge(m, src)
}
func (m *IDAndVersion) XXX_Size() int {
	return xxx_messageInfo_IDAndVersion.Size(m)
}
func (m *IDAndVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_IDAndVersion.DiscardUnknown(m)
}

var xxx_messageInfo_IDAndVersion proto.InternalMessageInfo

func (m *IDAndVersion) GetId() *StateID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IDAndVersion) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SyncStatesResponse struct {
	UnsyncedStates       []*IDAndVersion `protobuf:"bytes,1,rep,name=unsyncedStates,proto3" json:"unsyncedStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SyncStatesResponse) Reset()         { *m = SyncStatesResponse{} }
func (m *SyncStatesResponse) String() string { return proto.CompactTextString(m) }
func (*SyncStatesResponse) ProtoMessage()    {}
func (*SyncStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_645e93724c8b4dfe, []int{9}
}

func (m *SyncStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncStatesResponse.Unmarshal(m, b)
}
func (m *SyncStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncStatesResponse.Marshal(b, m, deterministic)
}
func (m *SyncStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncStatesResponse.Merge(m, src)
}
func (m *SyncStatesResponse) XXX_Size() int {
	return xxx_messageInfo_SyncStatesResponse.Size(m)
}
func (m *SyncStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncStatesResponse proto.InternalMessageInfo

func (m *SyncStatesResponse) GetUnsyncedStates() []*IDAndVersion {
	if m != nil {
		return m.UnsyncedStates
	}
	return nil
}

func init() {
	proto.RegisterType((*StateID)(nil), "magma.orc8r.StateID")
	proto.RegisterType((*GetStatesRequest)(nil), "magma.orc8r.GetStatesRequest")
	proto.RegisterType((*GetStatesResponse)(nil), "magma.orc8r.GetStatesResponse")
	proto.RegisterType((*ReportStatesRequest)(nil), "magma.orc8r.ReportStatesRequest")
	proto.RegisterType((*ReportStatesResponse)(nil), "magma.orc8r.ReportStatesResponse")
	proto.RegisterType((*IDAndError)(nil), "magma.orc8r.IDAndError")
	proto.RegisterType((*DeleteStatesRequest)(nil), "magma.orc8r.DeleteStatesRequest")
	proto.RegisterType((*SyncStatesRequest)(nil), "magma.orc8r.SyncStatesRequest")
	proto.RegisterType((*IDAndVersion)(nil), "magma.orc8r.IDAndVersion")
	proto.RegisterType((*SyncStatesResponse)(nil), "magma.orc8r.SyncStatesResponse")
}

func init() { proto.RegisterFile("orc8r/protos/state.proto", fileDescriptor_645e93724c8b4dfe) }

var fileDescriptor_645e93724c8b4dfe = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xd1, 0x6f, 0x12, 0x4f,
	0x10, 0x2e, 0xd0, 0x5f, 0x5b, 0x06, 0x7e, 0xa6, 0x4c, 0x49, 0x5c, 0xae, 0xb6, 0xe2, 0xc6, 0x18,
	0xe2, 0x03, 0x68, 0x79, 0xd1, 0x27, 0x83, 0xd2, 0x1a, 0x12, 0xa3, 0x66, 0x89, 0x98, 0xd8, 0x07,
	0x43, 0xd9, 0xb1, 0xd9, 0x08, 0xb7, 0xb8, 0x7b, 0x54, 0xf9, 0x1b, 0x7d, 0xf2, 0x3f, 0x32, 0xb7,
	0x77, 0x3d, 0xee, 0x8e, 0xd2, 0xa4, 0x0f, 0x3e, 0xdd, 0xcd, 0x7c, 0xf3, 0x7d, 0xf7, 0xcd, 0xec,
	0xdc, 0x02, 0xd3, 0x66, 0xf2, 0xc2, 0x74, 0xe6, 0x46, 0x07, 0xda, 0x76, 0x6c, 0x30, 0x0e, 0xa8,
	0xed, 0x02, 0xac, 0xcc, 0xc6, 0x97, 0xb3, 0x71, 0xdb, 0xe1, 0x5e, 0x23, 0x53, 0x36, 0xd1, 0xb3,
	0x99, 0xf6, 0xa3, 0x3a, 0xef, 0x28, 0xab, 0x40, 0xe6, 0x4a, 0x4d, 0xa8, 0xfb, 0xac, 0x1b, 0xc1,
	0xfc, 0x25, 0xec, 0x0e, 0x43, 0xd5, 0x41, 0x1f, 0x11, 0xb6, 0x83, 0xe5, 0x9c, 0x58, 0xa1, 0x59,
	0x68, 0x95, 0x85, 0x7b, 0x47, 0x0f, 0xf6, 0x24, 0x85, 0x8c, 0x41, 0x9f, 0x15, 0x5d, 0x3e, 0x89,
	0xf9, 0x9f, 0x02, 0xec, 0xbf, 0xa5, 0xc0, 0xd1, 0xad, 0xa0, 0x1f, 0x0b, 0xb2, 0x01, 0x3e, 0x80,
	0xb2, 0x4f, 0xc1, 0x4f, 0x6d, 0xbe, 0x0f, 0xfa, 0xb1, 0xd2, 0x2a, 0x81, 0x4f, 0xa0, 0xa4, 0xa4,
	0x65, 0xc5, 0x66, 0xa9, 0x55, 0x39, 0xa9, 0xb7, 0x53, 0x2d, 0xb4, 0x63, 0x17, 0x22, 0x2c, 0xc0,
	0x63, 0x80, 0xf0, 0xf3, 0x67, 0x6a, 0x1a, 0x90, 0x61, 0xd0, 0x2c, 0xb5, 0xca, 0x22, 0x95, 0x09,
	0x6d, 0x29, 0x19, 0xa3, 0x15, 0x87, 0x26, 0x71, 0xc8, 0x9d, 0xea, 0xb1, 0x1c, 0x8d, 0xa7, 0x0b,
	0xb2, 0xac, 0xda, 0x2c, 0xb4, 0xf6, 0x44, 0x2a, 0x83, 0x87, 0x50, 0x56, 0xf2, 0xeb, 0xdc, 0xd0,
	0x37, 0xf5, 0x8b, 0xfd, 0x1f, 0xf5, 0xa4, 0xe4, 0x47, 0x17, 0xf3, 0x57, 0x50, 0x4b, 0xb5, 0x64,
	0xe7, 0xda, 0xb7, 0x84, 0x4f, 0x61, 0xc7, 0x4d, 0xde, 0xb2, 0x82, 0x33, 0x8e, 0xeb, 0xc6, 0x45,
	0x5c, 0xc1, 0x7b, 0x70, 0x20, 0x68, 0xae, 0x4d, 0x6e, 0x2c, 0x77, 0x91, 0x38, 0x87, 0x7a, 0x56,
	0x22, 0xb6, 0xf1, 0x06, 0xf6, 0x17, 0xbe, 0x71, 0x08, 0xc9, 0x61, 0x5a, 0xed, 0x7e, 0x46, 0x6d,
	0xd0, 0xef, 0xf9, 0xf2, 0xd4, 0x18, 0x6d, 0xc4, 0x1a, 0x81, 0x0b, 0x80, 0x15, 0x7e, 0xd7, 0x23,
	0xc7, 0x3a, 0xfc, 0x47, 0x21, 0x91, 0x95, 0x1c, 0x10, 0x05, 0xfc, 0x1c, 0x0e, 0xfa, 0x34, 0xa5,
	0x80, 0xfe, 0xc1, 0x2a, 0xf0, 0x33, 0xa8, 0x0d, 0x97, 0xfe, 0x24, 0x2b, 0xfd, 0x3c, 0x37, 0xce,
	0xc6, 0xfa, 0x00, 0x46, 0x64, 0xac, 0xd2, 0x7e, 0x32, 0xd5, 0xf7, 0x50, 0x4d, 0xe7, 0xf1, 0x31,
	0x14, 0x95, 0x74, 0xb6, 0x36, 0x7d, 0xbe, 0xa8, 0x24, 0x32, 0xd8, 0xbd, 0x8a, 0x08, 0x6e, 0x16,
	0xdb, 0xe2, 0x3a, 0xe4, 0x9f, 0x01, 0xd3, 0xbe, 0xe2, 0x33, 0xea, 0xc1, 0xbd, 0x85, 0x6f, 0x97,
	0xfe, 0x24, 0x77, 0x42, 0xb7, 0x18, 0xcc, 0x11, 0x4e, 0x7e, 0x17, 0xa1, 0xea, 0x5e, 0x87, 0xd1,
	0xbf, 0x8a, 0xef, 0xa0, 0x9c, 0xec, 0x24, 0x1e, 0x65, 0x84, 0xf2, 0xbf, 0x9f, 0x77, 0xbc, 0x09,
	0x8e, 0xfc, 0xf1, 0x2d, 0xfc, 0x04, 0xd5, 0xf4, 0x76, 0x61, 0x33, 0xc3, 0xb8, 0x61, 0x77, 0xbd,
	0x47, 0xb7, 0x54, 0x24, 0xb2, 0xa7, 0x50, 0x4d, 0xef, 0x40, 0x4e, 0xf6, 0x86, 0xf5, 0xf0, 0x6a,
	0x99, 0x8a, 0x91, 0x56, 0x92, 0x6f, 0xe1, 0x07, 0x80, 0xd5, 0x54, 0x31, 0xdb, 0xcd, 0xda, 0x1a,
	0x78, 0x0f, 0x37, 0xe2, 0xd7, 0xbe, 0x5e, 0x1f, 0x7e, 0x69, 0xb8, 0x9a, 0x4e, 0x74, 0x0d, 0x4e,
	0xd5, 0x45, 0xe7, 0x52, 0xc7, 0xb7, 0xe1, 0xc5, 0x8e, 0x7b, 0x76, 0xff, 0x06, 0x00, 0x00, 0xff,
	0xff, 0x78, 0x62, 0x28, 0xdf, 0x66, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StateServiceClient is the client API for StateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StateServiceClient interface {
	// GetStates retrieves states from blobstorage.
	GetStates(ctx context.Context, in *GetStatesRequest, opts ...grpc.CallOption) (*GetStatesResponse, error)
	// ReportStates saves states into blobstorage.
	ReportStates(ctx context.Context, in *ReportStatesRequest, opts ...grpc.CallOption) (*ReportStatesResponse, error)
	// DeleteStates deletes states from blobstorage.
	DeleteStates(ctx context.Context, in *DeleteStatesRequest, opts ...grpc.CallOption) (*Void, error)
	// SyncStates retrieves states from blobstorage, compares their versions
	// to the states included in the request, and returns the IDAndVersions
	// that differ.
	SyncStates(ctx context.Context, in *SyncStatesRequest, opts ...grpc.CallOption) (*SyncStatesResponse, error)
}

type stateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStateServiceClient(cc grpc.ClientConnInterface) StateServiceClient {
	return &stateServiceClient{cc}
}

func (c *stateServiceClient) GetStates(ctx context.Context, in *GetStatesRequest, opts ...grpc.CallOption) (*GetStatesResponse, error) {
	out := new(GetStatesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.StateService/GetStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateServiceClient) ReportStates(ctx context.Context, in *ReportStatesRequest, opts ...grpc.CallOption) (*ReportStatesResponse, error) {
	out := new(ReportStatesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.StateService/ReportStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateServiceClient) DeleteStates(ctx context.Context, in *DeleteStatesRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.StateService/DeleteStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateServiceClient) SyncStates(ctx context.Context, in *SyncStatesRequest, opts ...grpc.CallOption) (*SyncStatesResponse, error) {
	out := new(SyncStatesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.StateService/SyncStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StateServiceServer is the server API for StateService service.
type StateServiceServer interface {
	// GetStates retrieves states from blobstorage.
	GetStates(context.Context, *GetStatesRequest) (*GetStatesResponse, error)
	// ReportStates saves states into blobstorage.
	ReportStates(context.Context, *ReportStatesRequest) (*ReportStatesResponse, error)
	// DeleteStates deletes states from blobstorage.
	DeleteStates(context.Context, *DeleteStatesRequest) (*Void, error)
	// SyncStates retrieves states from blobstorage, compares their versions
	// to the states included in the request, and returns the IDAndVersions
	// that differ.
	SyncStates(context.Context, *SyncStatesRequest) (*SyncStatesResponse, error)
}

// UnimplementedStateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStateServiceServer struct {
}

func (*UnimplementedStateServiceServer) GetStates(ctx context.Context, req *GetStatesRequest) (*GetStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStates not implemented")
}
func (*UnimplementedStateServiceServer) ReportStates(ctx context.Context, req *ReportStatesRequest) (*ReportStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportStates not implemented")
}
func (*UnimplementedStateServiceServer) DeleteStates(ctx context.Context, req *DeleteStatesRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStates not implemented")
}
func (*UnimplementedStateServiceServer) SyncStates(ctx context.Context, req *SyncStatesRequest) (*SyncStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncStates not implemented")
}

func RegisterStateServiceServer(s *grpc.Server, srv StateServiceServer) {
	s.RegisterService(&_StateService_serviceDesc, srv)
}

func _StateService_GetStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServiceServer).GetStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.StateService/GetStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServiceServer).GetStates(ctx, req.(*GetStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StateService_ReportStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServiceServer).ReportStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.StateService/ReportStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServiceServer).ReportStates(ctx, req.(*ReportStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StateService_DeleteStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServiceServer).DeleteStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.StateService/DeleteStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServiceServer).DeleteStates(ctx, req.(*DeleteStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StateService_SyncStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServiceServer).SyncStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.StateService/SyncStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServiceServer).SyncStates(ctx, req.(*SyncStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.StateService",
	HandlerType: (*StateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStates",
			Handler:    _StateService_GetStates_Handler,
		},
		{
			MethodName: "ReportStates",
			Handler:    _StateService_ReportStates_Handler,
		},
		{
			MethodName: "DeleteStates",
			Handler:    _StateService_DeleteStates_Handler,
		},
		{
			MethodName: "SyncStates",
			Handler:    _StateService_SyncStates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/protos/state.proto",
}
