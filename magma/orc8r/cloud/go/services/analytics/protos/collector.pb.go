// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collector.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CollectRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectRequest) Reset()         { *m = CollectRequest{} }
func (m *CollectRequest) String() string { return proto.CompactTextString(m) }
func (*CollectRequest) ProtoMessage()    {}
func (*CollectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{0}
}

func (m *CollectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectRequest.Unmarshal(m, b)
}
func (m *CollectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectRequest.Marshal(b, m, deterministic)
}
func (m *CollectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectRequest.Merge(m, src)
}
func (m *CollectRequest) XXX_Size() int {
	return xxx_messageInfo_CollectRequest.Size(m)
}
func (m *CollectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CollectRequest proto.InternalMessageInfo

// CollectResponse provides the response of the built analytics response
type CollectResponse struct {
	Results              []*CalculationResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CollectResponse) Reset()         { *m = CollectResponse{} }
func (m *CollectResponse) String() string { return proto.CompactTextString(m) }
func (*CollectResponse) ProtoMessage()    {}
func (*CollectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{1}
}

func (m *CollectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectResponse.Unmarshal(m, b)
}
func (m *CollectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectResponse.Marshal(b, m, deterministic)
}
func (m *CollectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectResponse.Merge(m, src)
}
func (m *CollectResponse) XXX_Size() int {
	return xxx_messageInfo_CollectResponse.Size(m)
}
func (m *CollectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CollectResponse proto.InternalMessageInfo

func (m *CollectResponse) GetResults() []*CalculationResult {
	if m != nil {
		return m.Results
	}
	return nil
}

//CalculationResult contains the metrics calculation from a single metric
type CalculationResult struct {
	Value                float64           `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	MetricName           string            `protobuf:"bytes,2,opt,name=metricName,proto3" json:"metricName,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CalculationResult) Reset()         { *m = CalculationResult{} }
func (m *CalculationResult) String() string { return proto.CompactTextString(m) }
func (*CalculationResult) ProtoMessage()    {}
func (*CalculationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_9305884a292fdf82, []int{2}
}

func (m *CalculationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationResult.Unmarshal(m, b)
}
func (m *CalculationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationResult.Marshal(b, m, deterministic)
}
func (m *CalculationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationResult.Merge(m, src)
}
func (m *CalculationResult) XXX_Size() int {
	return xxx_messageInfo_CalculationResult.Size(m)
}
func (m *CalculationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationResult.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationResult proto.InternalMessageInfo

func (m *CalculationResult) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CalculationResult) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *CalculationResult) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*CollectRequest)(nil), "magma.orc8r.analytics.CollectRequest")
	proto.RegisterType((*CollectResponse)(nil), "magma.orc8r.analytics.CollectResponse")
	proto.RegisterType((*CalculationResult)(nil), "magma.orc8r.analytics.CalculationResult")
	proto.RegisterMapType((map[string]string)(nil), "magma.orc8r.analytics.CalculationResult.LabelsEntry")
}

func init() { proto.RegisterFile("collector.proto", fileDescriptor_9305884a292fdf82) }

var fileDescriptor_9305884a292fdf82 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xc9, 0x8a, 0x9b, 0x7b, 0x03, 0x37, 0x83, 0x42, 0xd9, 0x41, 0x4a, 0x41, 0xe9, 0x29,
	0x87, 0xe9, 0x61, 0x7a, 0x73, 0xc5, 0xdb, 0xf0, 0x10, 0x10, 0xc4, 0x5b, 0x16, 0x1e, 0x52, 0x4c,
	0x93, 0x99, 0xa4, 0x42, 0xff, 0x4d, 0xff, 0x22, 0x31, 0x59, 0xb5, 0xa2, 0xa2, 0xa7, 0xe4, 0xfb,
	0xf2, 0xbe, 0x97, 0x1f, 0xef, 0xc1, 0x54, 0x1a, 0xa5, 0x50, 0x7a, 0x63, 0xd9, 0xd6, 0x1a, 0x6f,
	0xe8, 0x71, 0x2d, 0x1e, 0x6b, 0xc1, 0x8c, 0x95, 0x4b, 0xcb, 0x84, 0x16, 0xaa, 0xf5, 0x95, 0x74,
	0xf9, 0x0c, 0x0e, 0xca, 0x58, 0xc9, 0xf1, 0xb9, 0x41, 0xe7, 0xf3, 0x3b, 0x98, 0x7e, 0x38, 0x6e,
	0x6b, 0xb4, 0x43, 0xba, 0x82, 0x91, 0x45, 0xd7, 0x28, 0xef, 0x52, 0x92, 0x25, 0xc5, 0x64, 0x51,
	0xb0, 0x1f, 0xbb, 0xb1, 0x52, 0x28, 0xd9, 0x28, 0xe1, 0x2b, 0xa3, 0x79, 0x08, 0xf0, 0x2e, 0x98,
	0xbf, 0x12, 0x38, 0xfc, 0xf6, 0x4c, 0x8f, 0x60, 0xef, 0x45, 0xa8, 0x06, 0x53, 0x92, 0x91, 0x82,
	0xf0, 0x28, 0xe8, 0x09, 0x40, 0x8d, 0xde, 0x56, 0xf2, 0x56, 0xd4, 0x98, 0x0e, 0x32, 0x52, 0x8c,
	0x79, 0xcf, 0xa1, 0x6b, 0x18, 0x2a, 0xb1, 0x41, 0xe5, 0xd2, 0x24, 0xe0, 0x5c, 0xfc, 0x17, 0x87,
	0xad, 0x43, 0xec, 0x46, 0x7b, 0xdb, 0xf2, 0x5d, 0x8f, 0xf9, 0x25, 0x4c, 0x7a, 0x36, 0x9d, 0x41,
	0xf2, 0x84, 0x6d, 0x00, 0x1a, 0xf3, 0xf7, 0xeb, 0x27, 0x64, 0x24, 0x89, 0xe2, 0x6a, 0xb0, 0x24,
	0x0b, 0x0d, 0xf4, 0xba, 0xfb, 0xad, 0xec, 0x06, 0x4e, 0xef, 0x61, 0xb4, 0x13, 0xf4, 0xf4, 0x37,
	0xb2, 0x2f, 0x33, 0x9f, 0x9f, 0xfd, 0x55, 0x16, 0x17, 0xb1, 0xda, 0x7f, 0x18, 0x86, 0x6d, 0xba,
	0x4d, 0x3c, 0xcf, 0xdf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xab, 0x10, 0xcc, 0xe8, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnalyticsCollectorClient is the client API for AnalyticsCollector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnalyticsCollectorClient interface {
	// Collect returns a list of partial calculation metrics
	Collect(ctx context.Context, in *CollectRequest, opts ...grpc.CallOption) (*CollectResponse, error)
}

type analyticsCollectorClient struct {
	cc grpc.ClientConnInterface
}

func NewAnalyticsCollectorClient(cc grpc.ClientConnInterface) AnalyticsCollectorClient {
	return &analyticsCollectorClient{cc}
}

func (c *analyticsCollectorClient) Collect(ctx context.Context, in *CollectRequest, opts ...grpc.CallOption) (*CollectResponse, error) {
	out := new(CollectResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.analytics.AnalyticsCollector/Collect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnalyticsCollectorServer is the server API for AnalyticsCollector service.
type AnalyticsCollectorServer interface {
	// Collect returns a list of partial calculation metrics
	Collect(context.Context, *CollectRequest) (*CollectResponse, error)
}

// UnimplementedAnalyticsCollectorServer can be embedded to have forward compatible implementations.
type UnimplementedAnalyticsCollectorServer struct {
}

func (*UnimplementedAnalyticsCollectorServer) Collect(ctx context.Context, req *CollectRequest) (*CollectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Collect not implemented")
}

func RegisterAnalyticsCollectorServer(s *grpc.Server, srv AnalyticsCollectorServer) {
	s.RegisterService(&_AnalyticsCollector_serviceDesc, srv)
}

func _AnalyticsCollector_Collect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnalyticsCollectorServer).Collect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.analytics.AnalyticsCollector/Collect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnalyticsCollectorServer).Collect(ctx, req.(*CollectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnalyticsCollector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.analytics.AnalyticsCollector",
	HandlerType: (*AnalyticsCollectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Collect",
			Handler:    _AnalyticsCollector_Collect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "collector.proto",
}
